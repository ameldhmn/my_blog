{
  "hash": "45f14a284d478d0b2b3ee48caf1884b7",
  "result": {
    "markdown": "---\ntitle: \"Exercices - Semaine 2️⃣\"\ndate: \"2024-03-07\"\ncategories: [code, analysis]\nimage: \"image.jpg\"\n---\n\n\n## Exercices - Semaine 2\n\n### Préparation\n\n::: {style=\"text-align: justify;\"}\nDémarrez un nouveau projet rstudio intitulé TP2. Installez la library rvest en utilisant la commande install.packages(\"rvest\"). Cette librairie sera utilisée pour lire des tables de données directement depuis le web. De même, installez le package purrr.\n:::\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#install.packages(c(\"rvest\", \"dplyr\", \"purrr\"))\nlibrary(readr)\nlibrary(rvest)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n\nAttaching package: 'rvest'\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nThe following object is masked from 'package:readr':\n\n    guess_encoding\n```\n:::\n\n```{.r .cell-code}\nlibrary(dplyr)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n\nAttaching package: 'dplyr'\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nThe following objects are masked from 'package:stats':\n\n    filter, lag\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nThe following objects are masked from 'package:base':\n\n    intersect, setdiff, setequal, union\n```\n:::\n\n```{.r .cell-code}\nlibrary(purrr)\nlibrary(stringr)\n```\n:::\n\n\n### Exercice\n\n### Question 1\n\n#### Lancez la commande suivante :\n\nlist_tables \\<- session(\"[https://fr.wikipedia.org/wiki/Liste_des_m%C3%A9daill%C3%A9s_olympiques\")](https://fr.wikipedia.org/wiki/Liste_des_m%C3%A9daill%C3%A9s_olympiques%22)) \\|\\> html_elements(\".wikitable\") \\|\\> html_table()\n\nQue s’est-il passé ? Que contient l’objet list_tables ?\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlist_tables <-\n  session(\"https://fr.wikipedia.org/wiki/Liste_des_m%C3%A9daill%C3%A9s_olympiques\") |>\n  html_elements(\".wikitable\") |>\n  html_table()\n\nlist_tables # A tibble: 24 × 11\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[[1]]\n# A tibble: 31 × 11\n   Discipline   Discipline   Années `Nombre de` `Nombre de` `médailles décernés`\n   <chr>        <chr>        <chr>  <chr>       <chr>       <chr>               \n 1 \"Discipline\" Discipline   Années Éditions    Épreuves(e… Or                  \n 2 \"\"           Athlétisme   Depui… 29          48          1028                \n 3 \"\"           Aviron       Depui… 28          14          269                 \n 4 \"\"           Badminton    Depui… 8           5           39                  \n 5 \"\"           Basket-ball  Depui… 20          4           32                  \n 6 \"\"           Boxe         1904,… 26          13          266                 \n 7 \"\"           Canoë-kayak  Depui… 20          16          242                 \n 8 \"\"           Cyclisme(ho… Depui… 29          22          263                 \n 9 \"\"           Équitation   1900,… 26          6           151                 \n10 \"\"           Escrime      Depui… 29          12          223                 \n# ℹ 21 more rows\n# ℹ 5 more variables: `médailles décernés` <chr>, `médailles décernés` <chr>,\n#   `médailles décernés` <chr>,\n#   `Athlète(s) avec le plus de médailles (Or-Argent-Bronze)` <chr>,\n#   `Athlète(s) avec le plus de médailles d'or` <chr>\n\n[[2]]\n# A tibble: 16 × 11\n   Discipline   Discipline   Années `Nombre de` `Nombre de` `médailles décernés`\n   <chr>        <chr>        <chr>  <chr>       <chr>       <chr>               \n 1 \"Discipline\" Discipline   Années Éditions    épreuves e… Or                  \n 2 \"\"           Biathlon     1924,… 16          11          54                  \n 3 \"\"           Bobsleigh    1924-… 21          3           39                  \n 4 \"\"           Combiné nor… Depui… 22          3           28                  \n 5 \"\"           Curling      1924,… 4           2           7                   \n 6 \"\"           Hockey sur … Été :… 23          2           24                  \n 7 \"\"           Luge         Depui… 14          4           37                  \n 8 \"\"           Patinage ar… Été :… 24          4           77                  \n 9 \"\"           Patinage de… Depui… 22          12          152                 \n10 \"\"           Patinage de… Depui… 7           8           32                  \n11 \"\"           Saut à ski   Depui… 22          4           38                  \n12 \"\"           Skeleton     1924,… 6           2           6                   \n13 \"\"           Ski acrobat… Depui… 7           10          18                  \n14 \"\"           Ski alpin    Depui… 19          10          132                 \n15 \"\"           Ski de fond  Depui… 22          12          134                 \n16 \"\"           Snowboard    Depui… 5           10          14                  \n# ℹ 5 more variables: `médailles décernés` <chr>, `médailles décernés` <chr>,\n#   `médailles décernés` <chr>,\n#   `Athlète(s) avec le plus de médailles (Or-Argent-Bronze)` <chr>,\n#   `Athlète(s) avec le plus de médailles d'or` <chr>\n\n[[3]]\n# A tibble: 14 × 8\n   Discipline   Discipline       Années `Nombre d'éditions` `Médailles décernés`\n   <chr>        <chr>            <chr>  <chr>               <chr>               \n 1 \"Discipline\" Discipline       Années Nombre d'éditions   Or                  \n 2 \"\"           Baseball         1992–… 5                   5                   \n 3 \"\"           Pelote basque    1900   1                   1                   \n 4 \"\"           Cricket          1900   1                   1                   \n 5 \"\"           Croquet          1900   1                   3                   \n 6 \"\"           Jeu de paume     1908   1                   1                   \n 7 \"\"           Crosse           1904–… 2                   2                   \n 8 \"\"           Polo             1900,… 5                   5                   \n 9 \"\"           Jeu de raquettes 1908   1                   2                   \n10 \"\"           Roque            1904   1                   1                   \n11 \"\"           Rugby à XV       1900,… 4                   4                   \n12 \"\"           Softball         1996–… 4                   4                   \n13 \"\"           Tir à la corde   1900–… 5                   5                   \n14 \"\"           Motonautisme     1908   5                   3                   \n# ℹ 3 more variables: `Médailles décernés` <chr>, `Médailles décernés` <chr>,\n#   `Médailles décernés` <chr>\n\n[[4]]\n# A tibble: 2 × 8\n  Discipline   Discipline        Années `Nombre d'éditions` `Médailles décernés`\n  <chr>        <chr>             <chr>  <chr>               <chr>               \n1 \"Discipline\" Discipline        Années Nombre d'éditions   Or                  \n2 \"\"           Patrouille milit… 1924   1                   1                   \n# ℹ 3 more variables: `Médailles décernés` <chr>, `Médailles décernés` <chr>,\n#   `Médailles décernés` <chr>\n\n[[5]]\n# A tibble: 30 × 11\n   Jeux  Médaille  Médaille Hôte     Nombred'épreuves(ave…¹ `Médailles décernés`\n   <chr> <chr>     <chr>    <chr>    <chr>                  <chr>               \n 1 Jeux  Médaille  Médaille Hôte     Nombred'épreuves(avec… Or                  \n 2 1896  médaillés tableau  Athènes… 43                     43                  \n 3 1900  médaillés tableau  Paris, … 95                     90                  \n 4 1904  médaillés tableau  Saint-L… 91                     96                  \n 5 1908  médaillés tableau  Londres… 110                    110                 \n 6 1912  médaillés tableau  Stockho… 102                    103                 \n 7 1920  médaillés tableau  Anvers,… 154                    156                 \n 8 1924  médaillés tableau  Paris, … 126                    126                 \n 9 1928  médaillés tableau  Amsterd… 109                    111                 \n10 1932  médaillés tableau  Los Ang… 117                    116                 \n# ℹ 20 more rows\n# ℹ abbreviated name: ¹​`Nombred'épreuves(avec médailles)`\n# ℹ 5 more variables: `Médailles décernés` <chr>, `Médailles décernés` <chr>,\n#   `Médailles décernés` <chr>,\n#   `Athlète(s) avec le plus de médailles (Or-Argent-Bronze)` <chr>,\n#   `Athlète(s) avec le plus de médailles d'or` <chr>\n\n[[6]]\n# A tibble: 24 × 11\n   Jeux  Médaille  Médaille Hôte     Nombred'épreuves(ave…¹ `Médailles décernés`\n   <chr> <chr>     <chr>    <chr>    <chr>                  <chr>               \n 1 Jeux  Médaille  Médaille Hôte     Nombred'épreuves(avec… Or                  \n 2 1924  médaillés tableau  Chamoni… 16                     16                  \n 3 1928  médaillés tableau  Saint-M… 14                     14                  \n 4 1932  médaillés tableau  Lake Pl… 14                     14                  \n 5 1936  médaillés tableau  Garmisc… 17                     17                  \n 6 1948  médaillés tableau  Saint-M… 22                     22                  \n 7 1952  médaillés tableau  Oslo, N… 22                     22                  \n 8 1956  médaillés tableau  Cortina… 24                     25                  \n 9 1960  médaillés tableau  Squaw V… 27                     28                  \n10 1964  médaillés tableau  Innsbru… 34                     34                  \n# ℹ 14 more rows\n# ℹ abbreviated name: ¹​`Nombred'épreuves(avec médailles)`\n# ℹ 5 more variables: `Médailles décernés` <chr>, `Médailles décernés` <chr>,\n#   `Médailles décernés` <chr>,\n#   `Athlète(s) avec le plus de médailles (Or-Argent-Bronze)` <chr>,\n#   `Athlète(s) avec le plus de médailles d'or` <chr>\n```\n:::\n\n```{.r .cell-code}\nView(list_tables[[1]])\n```\n:::\n\n\nLe code a réussi à extraire les tables HTML de la page Wikipédia et les a stocker dans la variable list_tables qui apparait dans l'nevironnement R Studio.\n\nL'objet list_tables contient 6 tables différentes de dimensions différentes.\n\n### Question 2\n\n::: {style=\"text-align: justify;\"}\n#### Nous allons tout d’abord nous intéresser à la première table. Créez un objet intitulé data_medailles_sport_ete contenant le premier élément de list_tables. La table n’est pas bien formattée. Supprimez la première colonne, les noms de colonnes et la première ligne. Renommez les colonnes en c(\"Discipline\", \"Annees\", \"Editions\", \"Epreuves_2020\", \"Or\", \"Argent\", \"Bronze\", \"Total\", \"Athletes_medailles\", \"Athletes_or\"). Les colonnes Editions, Epreuves_2020, Or, Argent, Bronze, Total seront converties en colonnes d’entiers. {style=\"text-align: justify;\"}\n:::\n\n##### Création de l'objet intitulé data_medailles_sport_ete\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndata_medailles_sport_ete<- list_tables[[1]]\nprint(data_medailles_sport_ete)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 31 × 11\n   Discipline   Discipline   Années `Nombre de` `Nombre de` `médailles décernés`\n   <chr>        <chr>        <chr>  <chr>       <chr>       <chr>               \n 1 \"Discipline\" Discipline   Années Éditions    Épreuves(e… Or                  \n 2 \"\"           Athlétisme   Depui… 29          48          1028                \n 3 \"\"           Aviron       Depui… 28          14          269                 \n 4 \"\"           Badminton    Depui… 8           5           39                  \n 5 \"\"           Basket-ball  Depui… 20          4           32                  \n 6 \"\"           Boxe         1904,… 26          13          266                 \n 7 \"\"           Canoë-kayak  Depui… 20          16          242                 \n 8 \"\"           Cyclisme(ho… Depui… 29          22          263                 \n 9 \"\"           Équitation   1900,… 26          6           151                 \n10 \"\"           Escrime      Depui… 29          12          223                 \n# ℹ 21 more rows\n# ℹ 5 more variables: `médailles décernés` <chr>, `médailles décernés` <chr>,\n#   `médailles décernés` <chr>,\n#   `Athlète(s) avec le plus de médailles (Or-Argent-Bronze)` <chr>,\n#   `Athlète(s) avec le plus de médailles d'or` <chr>\n```\n:::\n:::\n\n\n##### Suppression de la première colonne\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndata_medailles_sport_ete<-data_medailles_sport_ete[, -1]\n```\n:::\n\n\n##### Suppression des noms de colonnes\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndata_medailles_sport_ete<-data_medailles_sport_ete[ -1,]\n```\n:::\n\n\n##### Suppression de la première ligne\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncolnames(data_medailles_sport_ete) <- NULL\n```\n:::\n\n\n##### Renommage des colonnes\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncolnames(data_medailles_sport_ete)<-c(\"Discipline\", \"Annees\", \"Editions\", \"Epreuves_2020\", \"Or\", \"Argent\", \"Bronze\", \"Total\", \"Athletes_medailles\", \"Athletes_or\")\n```\n:::\n\n\n##### Conversion de colonnes en colonnes d'entiers\n\n##### méthode 1\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(dplyr)\ndata_medailles_sport_ete <- data_medailles_sport_ete %>%\n  mutate(Editions = as.integer(Editions),\n         Epreuves_2020 = as.integer(Epreuves_2020),\n         Or = as.integer(Or),\n         Argent = as.integer(Argent),\n         Bronze = as.integer(Bronze),\n         Total = as.integer(Total))\n```\n:::\n\n\n##### méthode 2\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncols_a_convertir <- c(\"Editions\", \"Epreuves_2020\", \"Or\", \"Argent\", \"Bronze\", \"Total\")\n\ndata_medailles_sport_ete[cols_a_convertir] <- lapply(data_medailles_sport_ete[cols_a_convertir], as.integer)\n\nprint(data_medailles_sport_ete)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 30 × 10\n   Discipline            Annees Editions Epreuves_2020    Or Argent Bronze Total\n   <chr>                 <chr>     <int>         <int> <int>  <int>  <int> <int>\n 1 Athlétisme            Depui…       29            48  1028   1030   1027  3085\n 2 Aviron                Depui…       28            14   269    268    273   810\n 3 Badminton             Depui…        8             5    39     39     43   121\n 4 Basket-ball           Depui…       20             4    32     32     32    96\n 5 Boxe                  1904,…       26            13   266    266    472  1004\n 6 Canoë-kayak           Depui…       20            16   242    241    243   726\n 7 Cyclisme(hommes, fem… Depui…       29            22   263    261    260   784\n 8 Équitation            1900,…       26             6   151    149    148   448\n 9 Escrime               Depui…       29            12   223    223    221   667\n10 Football              1900–…       27             2    34     34     35   103\n# ℹ 20 more rows\n# ℹ 2 more variables: Athletes_medailles <chr>, Athletes_or <chr>\n```\n:::\n\n```{.r .cell-code}\nstr(data_medailles_sport_ete)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\ntibble [30 × 10] (S3: tbl_df/tbl/data.frame)\n $ Discipline        : chr [1:30] \"Athlétisme\" \"Aviron\" \"Badminton\" \"Basket-ball\" ...\n $ Annees            : chr [1:30] \"Depuis 1896\" \"Depuis 1900\" \"Depuis 1992\" \"Depuis 1936\" ...\n $ Editions          : int [1:30] 29 28 8 20 26 20 29 26 29 27 ...\n $ Epreuves_2020     : int [1:30] 48 14 5 4 13 16 22 6 12 2 ...\n $ Or                : int [1:30] 1028 269 39 32 266 242 263 151 223 34 ...\n $ Argent            : int [1:30] 1030 268 39 32 266 241 261 149 223 34 ...\n $ Bronze            : int [1:30] 1027 273 43 32 472 243 260 148 221 35 ...\n $ Total             : int [1:30] 3085 810 121 96 1004 726 784 448 667 103 ...\n $ Athletes_medailles: chr [1:30] \"Paavo Nurmi (FIN) (9-3-0)\" \"Elisabeta Lipă (ROU) (5-2-1)\" \"Gao Ling (CHN) (2-1-1)\" \"Teresa Edwards (USA) (4-0-1)\" ...\n $ Athletes_or       : chr [1:30] \"Paavo Nurmi (FIN) (9-3-0) Carl Lewis (USA) (9-1-0)\" \"Elisabeta Lipă (ROU) (5-2-1) Georgeta Damian (ROU) (5-0-1) Steven Redgrave (GBR) (5-0-1)\" \"Gao Ling (CHN) (2-1-1) Kim Dong-moon (KOR) (2-0-1) Zhang Nan (CHN) (2-0-1) Ge Fei (CHN) (2-0-0) Gu Jun (CHN) (2\"| __truncated__ \"Teresa Edwards (USA) (4-0-1) Sue Bird (USA) (4-0-0) Tamika Catchings (USA) (4-0-0) Lisa Leslie (USA) (4-0-0) Di\"| __truncated__ ...\n```\n:::\n:::\n\n\n### Question 3\n\n#### Quelles sont les 3 disciplines avec le plus de médailles distribuées depuis le début de l’histoire des jeux olympiques ?\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntop3_disciplines <- data_medailles_sport_ete |> \n  arrange(desc(Total)) |> \n  head(3) |> \n  select(Discipline, Total)\ntop3_disciplines  #Athletisme, Natation, Lutte \n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 3 × 2\n  Discipline               Total\n  <chr>                    <int>\n1 Athlétisme                3085\n2 Natation(hommes, femmes)  1814\n3 Lutte                     1358\n```\n:::\n:::\n\n\nL'athélisme, la natation et la lutte sont les trois disciplines avec le plus de médailles distribuées depuis le debut de l'histoire des JO.\n\n### Question 4\n\n#### Quelles sont les disciplines avec le moins d’épreuves en 2020 ?\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmoins_epreuves_2020 <- data_medailles_sport_ete |> \n  group_by(Discipline) |> \n  summarise(Epreuves_2020) |> \n  arrange(Epreuves_2020) |> \n  head(10)\n\nmoins_epreuves_2020\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 10 × 2\n   Discipline            Epreuves_2020\n   <chr>                         <int>\n 1 Football                          2\n 2 Golf                              2\n 3 Handball                          2\n 4 Hockey sur gazon                  2\n 5 Natation synchronisée             2\n 6 Pentathlon moderne                2\n 7 Volley-ball                       2\n 8 Water polo                        2\n 9 Triathlon                         3\n10 Basket-ball                       4\n```\n:::\n:::\n\n\nParmi les discplines ci-dessus, les 8 premières sont celles qui avec un nombre de 2 épreuves en présentent le moins.\n\n### Question 5\n\n::: {style=\"text-align: justify;\"}\n#### La colonne Editions nous renseigne sur le nombre total d’apparence des disciplines aux JO d’été. Nous souhaitons vérifier ce calcul en implémentant notre propre fonction calcul_nb_editions_int. Dans un premier temps, la fonction calcul_nb_editions prendra en entrée un paramètre depuis, de type entier, qui représente depuis quelle année la discipline est au programme. {style=\"text-align: justify;\"}\n:::\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncalcul_nb_editions <- function(depuis_annee, data_medailles_sport_ete) {\n  data_medailles_sport_ete$Annees <- as.character(data_medailles_sport_ete$Annees)\n  \n  data_medailles_sport_ete$Annees <- gsub(\".*(\\\\d{4}).*\", \"\\\\1\", data_medailles_sport_ete$Annees)\n  \n  data_medailles_sport_ete$Annees <- as.numeric(data_medailles_sport_ete$Annees)\n  \n  disciplines_filtrees <- subset(data_medailles_sport_ete, Annees >= depuis_annee)\n  \n  result <- aggregate(Editions ~ Discipline, disciplines_filtrees, sum)\n  \n  return(result)\n}\nresultat <- calcul_nb_editions(1800, data_medailles_sport_ete)\nprint(resultat)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n                    Discipline Editions\n1                   Athlétisme       29\n2                       Aviron       28\n3                    Badminton        8\n4                  Basket-ball       20\n5                         Boxe       26\n6                  Canoë-kayak       20\n7     Cyclisme(hommes, femmes)       29\n8                   Équitation       26\n9                      Escrime       29\n10                    Football       27\n11                        Golf        4\n12 Gymnastique(hommes, femmes)       29\n13               Haltérophilie       26\n14                    Handball       14\n15            Hockey sur gazon       24\n16                        Judo       14\n17                       Lutte       28\n18       Natation synchronisée       10\n19    Natation(hommes, femmes)       29\n20          Pentathlon moderne       25\n21                    Plongeon       27\n22                   Taekwondo        6\n23                      Tennis       16\n24             Tennis de table        9\n25                         Tir       27\n26                 Tir à l'arc       17\n27                   Triathlon        6\n28                       Voile       27\n29                 Volley-ball       15\n30                  Water polo       26\n```\n:::\n:::\n\n\nDans cette fonction, nous traitons les données des médailles olympiques d'été pour calculer le nombre total d'éditions pour chaque discipline sportive, en se basant sur l'année spécifiée par l'utilisateur. Tout d'abord, nous convertissons la colonne \"Années\" en chaînes de caractères pour uniformiser les données, puis nous extrayons les années pertinentes à l'aide d'une expression régulière. Ensuite, nous convertissons ces années en données numériques pour faciliter les calculs ultérieurs. En filtrant les données à partir de l'année spécifiée, nous excluons les éditions antérieures, avant d'agréger les résultats pour chaque discipline sportive, calculant ainsi la somme des éditions.\n\n### Question 6\n\n#### Dans certains cas, les disciplines ont été au programme de façon discontinue. Proposez une nouvelle fonction calcul_nb_editions_str qui prendra cette fois-ci en entrée des chaînes de caractères. Par exemple, l’appel suivant:\n\n#### calcul_nb_editions_str(\"1896, 1904, depuis 1920\")\n\n#### retournera la valeur 26\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncalcul_nb_editions_str <- function(x) {\n  r <- str_split(x, \",\", simplify = TRUE)\n  part <- ifelse(!grepl(\"(?i)depuis|[-—–—]\", r[,]), \"1\", r[,])\n  return(part)\n}\ncalcul_nb_editions_int <- function(part) {\n  depuis_years <- str_extract_all(part, \"(?i)depuis\\\\s+(\\\\d{4})\") |> \n    unlist() |> \n    str_extract(\"\\\\d+\")\n \n  Calcul_edition <- as.integer(depuis_years)\n  result <- (2024 - Calcul_edition) / 4 - ifelse(Calcul_edition < 1916, 3, ifelse(Calcul_edition < 1944, 2, 0))\n \n  part2 <- ifelse(grepl(\"(?i)depuis\\\\s+\\\\d{4}\", part), as.character(result), part)\n \n  return(part2)\n}\ncalcul_final <- function(part2) {\n  part2_numerique <- as.numeric(part2)\n  resultat_final <- sum(part2_numerique)\n  return(resultat_final)\n}\ncalcul_nb_editions <- function(x) {\n  part1 <- calcul_nb_editions_str(x)\n  part2 <- calcul_nb_editions_int(part1)\n  resultat_final <- calcul_final(part2)\n  return(resultat_final)\n}\nresultat2 <- calcul_nb_editions(\"1896, 1904, depuis 1920\")\nprint(resultat2)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 26\n```\n:::\n:::\n\n\nLa valeur 26 a bien été retournée.\n\n### Question 7\n\n::: {style=\"text-align: justify;\"}\n#### Définissez une fonction générique calcul_nb_editions et deux implémentations calcul_nb_editions.integer et ‘calcul_nb_editions.character. Quels résultats donnent les appels : {style=\"text-align: justify;\"}\n\n#### calcul_nb_editions(2000) {style=\"text-align: justify;\"}\n\n#### calcul_nb_editions(\"1904–1924, depuis 1948\") {style=\"text-align: justify;\"}\n:::\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncalcul_nb_editions_str <- function(x) {\n  r <- str_split(x, \",\", simplify = TRUE)\n  part <- ifelse(!grepl(\"(?i)depuis|[-—–—]\", r[,]), \"1\", r[,])\n  return(part)\n}\ncalcul_nb_editions_int <- function(part) {\n  depuis_years <- str_extract_all(part, \"(?i)depuis\\\\s+(\\\\d{4})\") |> \n    unlist() |> \n    str_extract(\"\\\\d+\")\n \n  Calcul_edition <- as.integer(depuis_years)\n  result <- (2024 - Calcul_edition) / 4 - ifelse(Calcul_edition < 1916, 3, ifelse(Calcul_edition < 1944, 2, 0))\n \n  part2 <- ifelse(grepl(\"(?i)depuis\\\\s+\\\\d{4}\", part), as.character(result), part)\n \n  return(part2)\n}\n\ncalcul_nb_editions.character <- function(part2) {\n  dates <- str_match(part2, \"([file://\\\\d{4})\\\\s*[-—–]\\\\s*(\\\\d{4}]\\\\d{4})\\\\s*[-—–]\\\\s*(\\\\d{4})\")\n  a <- as.integer(dates[1, 2])\n  b <- as.integer(dates[1, 3])\n \n  x <- ifelse(a < 1915 & b > 1917, 1,\n              ifelse(a < 1915 & b > 1945, 3,\n                     ifelse(1917 < a & a < 1939 & b > 1945, 2, 0)))\n \n  c_value <- (b - a) / 4 + 1 - x\n  part3 <- ifelse(grepl(\"(\\\\d{4})\\\\s*[-—–]\\\\s*(\\\\d{4})\", part2), as.character(c_value), part2)\n  return(part3)\n}\ncalcul_final2 <- function(part3) {\npart3_numerique <- as.numeric(part3[grepl(\"^\\\\d+$\", part3)])\n  resultat_final <- sum(part3_numerique)\n  return(resultat_final)\n}\ncalcul_nb_editions2 <- function(x) {\n  part1 <- calcul_nb_editions_str(x)\n  part2 <- calcul_nb_editions_int(part1)\n  part3 <- calcul_nb_editions.character(part2)\n  resultat_final <- calcul_final2(part3)\n \n  return(resultat_final)\n}\n\nresultat3 <- calcul_nb_editions(2000)\nprint(resultat3)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 1\n```\n:::\n\n```{.r .cell-code}\nresultat4 <- calcul_nb_editions(\"1904-1924, depuis 1948\")\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning in calcul_final(part2): NAs introduced by coercion\n```\n:::\n\n```{.r .cell-code}\nprint(resultat4)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] NA\n```\n:::\n:::\n\n\n### Question 8\n\n::: {style=\"text-align: justify;\"}\n#### En Athlétisme, le Finlandais Paavo Nurmi détient le record de médailles avec 12 médailles obtenues lors des JO d’hiver. {style=\"text-align: justify;\"}\n\n#### Implémentez une fonction calcul_medailles_individuelles qui détermine le nombre de médaille maximal a été obtenu par un athlète lors d’olympiades. Note : s’il y a plusieurs athlètes à égalité, alors la cellule comporte plusieurs éléments, et une manipulation de la chaîne de caractères est nécessaire. {style=\"text-align: justify;\"}\n:::\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncalcul_medailles_individuelles <- function(data_medailles_sport_ete) {\n  total_medailles <- rowSums(data_medailles_sport_ete[, c(\"Or\", \"Argent\", \"Bronze\")])\n  max_medailles <- max(total_medailles)\n  athletes_max_medailles <- data_medailles_sport_ete$Athletes_medailles[total_medailles == max_medailles]\n  return(athletes_max_medailles)\n}\nresultat5 <- calcul_medailles_individuelles(data_medailles_sport_ete)\nprint(resultat5)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"Paavo Nurmi (FIN) (9-3-0)\"\n```\n:::\n:::\n\n\nC'est bien Paavo Nurmi qui ressort.\n\n### Question 9\n\n::: {style=\"text-align: justify;\"}\n#### Quel est le top 3 des athlètes ? Vous utiliserez la fonction lapply pour appliquer la fonction calcul_medailles_individuelles à chaque élément de la colonne Athletes_medailles. {style=\"text-align: justify;\"}\n:::\n\n\n::: {.cell}\n\n```{.r .cell-code}\nathletes <- unlist(lapply(data_medailles_sport_ete$Athletes_medailles, function(athletes) {\n  calcul_medailles_individuelles(data_medailles_sport_ete[data_medailles_sport_ete$Athletes_medailles == athletes, ])\n}))\nathletes\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n [1] \"Paavo Nurmi (FIN) (9-3-0)\"                                                                                                                                                                                                                                                                              \n [2] \"Elisabeta Lipă (ROU) (5-2-1)\"                                                                                                                                                                                                                                                                           \n [3] \"Gao Ling (CHN) (2-1-1)\"                                                                                                                                                                                                                                                                                 \n [4] \"Teresa Edwards (USA) (4-0-1)\"                                                                                                                                                                                                                                                                           \n [5] \"László Papp (HUN) (3-0-0) Félix Savón (CUB) (3-0-0) Teófilo Stevenson (CUB) (3-0-0) Roniel Iglesias (CUB) (2-0-1) Boris Lagutin (URS) (2-0-1) Oleg Saitov (RUS) (2-0-1) Zou Shiming (CHN) (2-0-1) Roberto Cammarelle (ITA) (1-1-1) Zbigniew Pietrzykowski (POL) (0-1-2) Arnold Vanderlyde (NED) (0-0-3)\"\n [6] \"Birgit Fischer (GER) (8-4-0)\"                                                                                                                                                                                                                                                                           \n [7] \"Jason Kenny (GBR) (7-2-0)\"                                                                                                                                                                                                                                                                              \n [8] \"Isabell Werth (GER) (7-5-0)\"                                                                                                                                                                                                                                                                            \n [9] \"Edoardo Mangiarotti (ITA) (6-5-2)\"                                                                                                                                                                                                                                                                      \n[10] \"Christie Rampone (USA) (3-1-0)\"                                                                                                                                                                                                                                                                         \n[11] \"Chandler Egan (USA) (1-1-0) Lydia Ko (NZL) (0-1-1) Francis Newton (USA) (0-1-1)\"                                                                                                                                                                                                                        \n[12] \"Larissa Latynina (URS) (9-5-4)\"                                                                                                                                                                                                                                                                         \n[13] \"Andreï Lavrov (RUS) (3-0-1) Oh Seong-ok (KOR) (1-2-1)\"                                                                                                                                                                                                                                                  \n[14] \"Pýrros Dímas (GRE) (3-0-1) Ronny Weller (GER) (1-2-1) Nikolaj Pešalov (BUL, CRO) (1-1-2) Norbert Schemansky (USA) (1-1-2) Eko Yuli Irawan (INA) (0-2-2)\"                                                                                                                                                \n[15] \"Leslie Claudius (IND) (3-1-0) Udham Singh (IND) (3-1-0) Teun de Nooijer (NED) (2-2-0) Luciana Aymar (ARG) (0-2-2)\"                                                                                                                                                                                      \n[16] \"Teddy Riner (FRA) (3-0-2) Ryōko Tani (JPN) (2-2-1)\"                                                                                                                                                                                                                                                     \n[17] \"Wilfried Dietrich (RFA) (1-2-2)\"                                                                                                                                                                                                                                                                        \n[18] \"Michael Phelps (USA) (23-3-2)\"                                                                                                                                                                                                                                                                          \n[19] \"Svetlana Romashina (RUS) (7-0-0)\"                                                                                                                                                                                                                                                                       \n[20] \"Pavel Lednev (URS) (2-2-3)\"                                                                                                                                                                                                                                                                             \n[21] \"Dmitri Sautin (RUS) (2-2-4)\"                                                                                                                                                                                                                                                                            \n[22] \"Hwang Kyung-seon (KOR) (2-0-1) Steven López (USA) (2-0-1) Hadi Saei (IRI) (2-0-1) María Espinoza (MEX) (1-1-1)\"                                                                                                                                                                                         \n[23] \"Venus Williams (USA) (4-1-0) Kitty McKane (GBR) (1-2-2)\"                                                                                                                                                                                                                                                \n[24] \"Ma Long (CHN) (5-0-0) Wang Nan (CHN) (4-1-0) Wang Hao (CHN) (2-3-0)\"                                                                                                                                                                                                                                    \n[25] \"Carl Osburn (USA) (5-4-2)\"                                                                                                                                                                                                                                                                              \n[26] \"Hubert Van Innis (BEL) (6-4-0)\"                                                                                                                                                                                                                                                                         \n[27] \"Jonathan Brownlee (GBR) (1-1-1)\"                                                                                                                                                                                                                                                                        \n[28] \"Ben Ainslie (GBR) (4-1-0) Robert Scheidt (BRA) (2-2-1) Torben Grael (BRA) (2-1-2)\"                                                                                                                                                                                                                      \n[29] \"Ana Fernández (CUB) (3-0-1) Kerri Walsh (USA) (3-0-1) Inna Ryskal (URS) (2-2-0) Sérgio Dutra Santos (BRA) (2-2-0) Sergey Tetyukhin (RUS) (1-1-2)\"                                                                                                                                                       \n[30] \"Dezső Gyarmati (HUN) (3-1-1)\"                                                                                                                                                                                                                                                                           \n```\n:::\n:::\n\n\n##### Nettoyage du nom des athlètes en supprimant les informations sur les médailles\n\n\n::: {.cell}\n\n```{.r .cell-code}\nathletes_triees <- gsub(\"\\\\s*\\\\(.*\\\\)\", \"\", athletes)\n\ntop3_athletes <- head(sort(table(athletes_triees), decreasing = TRUE), 3)\n\nprint(top3_athletes)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nathletes_triees\nAna Fernández Andreï Lavrov   Ben Ainslie \n            1             1             1 \n```\n:::\n:::\n\n\n##### Autre méthode\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntable_medailles <- table(data_medailles_sport_ete$Athletes_medailles)\n\ntable_triee2 <- sort(table_medailles, decreasing = TRUE)\n\ntop3_athletes2 <- names(table_triee2)[1:3]\n\nprint(top3_athletes2)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"Ana Fernández (CUB) (3-0-1) Kerri Walsh (USA) (3-0-1) Inna Ryskal (URS) (2-2-0) Sérgio Dutra Santos (BRA) (2-2-0) Sergey Tetyukhin (RUS) (1-1-2)\"\n[2] \"Andreï Lavrov (RUS) (3-0-1) Oh Seong-ok (KOR) (1-2-1)\"                                                                                           \n[3] \"Ben Ainslie (GBR) (4-1-0) Robert Scheidt (BRA) (2-2-1) Torben Grael (BRA) (2-1-2)\"                                                               \n```\n:::\n:::\n\n\nLe top 3 des athlètes est :\n\n-   Ana Fernandez\n\n-   Andreï Lavrov\n\n-   Ben Ainslie\n\n### Question 10\n\n::: {style=\"text-align: justify;\"}\n#### Quels sont les 3 nationalités les plus représentées, pour toutes les épreuves, au classement du nombre de médailles d’or individuelles reccueillies ? {style=\"text-align: justify;\"}\n:::\n\n-   ::: {style=\"text-align: justify;\"}\n    -   Pour ce faire, vous implémenterez une fonction extraire_nationalite_athlete qui à partir d’une chaine de charactère extraira le nombre d’athlète et leur nationalité. Par exemple, la chaine de caractère “Paavo Nurmi (FIN) (9-3-0) Carl Lewis (USA) (9-1-0)” donnera en sortie c(\"FIN\" = 1, \"USA\" = 1).\n\n    -   Vous utilisez la fonction lapply pour appliquer la fonction à toute la colonne.\n\n    -   Vous agrégerez les résultats de manière à sommer toutes les lignes et à obtenir les 3 nations les plus représentées, et leur effectif.\n    :::\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(stringr)\nextraire_nationalite_athlete <- function(chaine) {\n  nationalites <- regmatches(chaine, gregexpr(\"\\\\b[A-Z]{3}\\\\b\", chaine, perl=TRUE))[[1]]\n  return(nationalites)\n}\n\nnationalites_list <- unlist(lapply(data_medailles_sport_ete$Athletes_or, extraire_nationalite_athlete))\n\ntop3_nationalites <- head(sort(table(nationalites_list), decreasing = TRUE), 3)\n\nprint(top3_nationalites)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nnationalites_list\nUSA CHN CUB \n 20  13   8 \n```\n:::\n:::\n\n\nLes trois nations les plus représentées pour toutes les épreuves au classement du nombre de médailles d’or individuelles sont les suivantes :\n\n-   Les États-Unis (USA), avec un total de 20 médailles d'or individuelles\n\n-   La Chine (CHN), qui a remporté 13 médailles d'or individuelles\n\n-   Cuba (CUB), avec 8 médailles d'or individuelles\n\n### Question 11\n\n::: {style=\"text-align: justify;\"}\n#### Intéressez-vous désormais au deuxième tableau contenu dans list_tables, faisant référence aux JO d’hiver. Appliquez les fonctions calcul_medailles_individuelles et extraire_nationalite_athlete aux deux dernières colonnes, à la manière des questions 9 et 10. Cette fois-ci, vous utiliserez la fonction appropriée du package purrr en lieu et place de lapply. Quelles sont les résultats ? Quelle différence voyez-vous entre lapply et les fonctions de purrr ? {style=\"text-align: justify;\"}\n:::\n\n\n::: {.cell}\n\n```{.r .cell-code}\nhiver <- list_tables[[2]]\nprint(hiver)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 16 × 11\n   Discipline   Discipline   Années `Nombre de` `Nombre de` `médailles décernés`\n   <chr>        <chr>        <chr>  <chr>       <chr>       <chr>               \n 1 \"Discipline\" Discipline   Années Éditions    épreuves e… Or                  \n 2 \"\"           Biathlon     1924,… 16          11          54                  \n 3 \"\"           Bobsleigh    1924-… 21          3           39                  \n 4 \"\"           Combiné nor… Depui… 22          3           28                  \n 5 \"\"           Curling      1924,… 4           2           7                   \n 6 \"\"           Hockey sur … Été :… 23          2           24                  \n 7 \"\"           Luge         Depui… 14          4           37                  \n 8 \"\"           Patinage ar… Été :… 24          4           77                  \n 9 \"\"           Patinage de… Depui… 22          12          152                 \n10 \"\"           Patinage de… Depui… 7           8           32                  \n11 \"\"           Saut à ski   Depui… 22          4           38                  \n12 \"\"           Skeleton     1924,… 6           2           6                   \n13 \"\"           Ski acrobat… Depui… 7           10          18                  \n14 \"\"           Ski alpin    Depui… 19          10          132                 \n15 \"\"           Ski de fond  Depui… 22          12          134                 \n16 \"\"           Snowboard    Depui… 5           10          14                  \n# ℹ 5 more variables: `médailles décernés` <chr>, `médailles décernés` <chr>,\n#   `médailles décernés` <chr>,\n#   `Athlète(s) avec le plus de médailles (Or-Argent-Bronze)` <chr>,\n#   `Athlète(s) avec le plus de médailles d'or` <chr>\n```\n:::\n:::\n\n\n##### Suppression de la première colonne et de la première ligne\n\n\n::: {.cell}\n\n```{.r .cell-code}\nhiver <- hiver[,-1]\ncolnames(hiver) = c(\"Discipline\", \"Annee\", \"Editions\", \"Epreuves_2014\", \"Or\", \"Argent\", \"Bronze\", \"Total\", \"Athletes_medailles\", \"Athletes_or\")\n\nhiver <- hiver[-1,]\nstr(hiver)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\ntibble [15 × 10] (S3: tbl_df/tbl/data.frame)\n $ Discipline        : chr [1:15] \"Biathlon\" \"Bobsleigh\" \"Combiné nordique\" \"Curling\" ...\n $ Annee             : chr [1:15] \"1924,Depuis 1960\" \"1924-1956,depuis 1964\" \"Depuis 1924\" \"1924,depuis 1998\" ...\n $ Editions          : chr [1:15] \"16\" \"21\" \"22\" \"4\" ...\n $ Epreuves_2014     : chr [1:15] \"11\" \"3\" \"3\" \"2\" ...\n $ Or                : chr [1:15] \"54\" \"39\" \"28\" \"7\" ...\n $ Argent            : chr [1:15] \"54\" \"37\" \"28\" \"7\" ...\n $ Bronze            : chr [1:15] \"54\" \"39\" \"28\" \"7\" ...\n $ Total             : chr [1:15] \"162\" \"115\" \"84\" \"21\" ...\n $ Athletes_medailles: chr [1:15] \"Ole Einar Bjørndalen (NOR) (8-4-1)\" \"Bogdan Musiol (RDA) (1-5-1)\" \"Felix Gottwald (AUT) (3-1-3)\" \"Anna Le Moine (SWE) (2-0-0) Cathrine Lindahl (SWE) (2-0-0) Eva Lund (SWE) (2-0-0) Anette Norberg (SWE) (2-0-0)\\\"| __truncated__ ...\n $ Athletes_or       : chr [1:15] \"Ole Einar Bjørndalen (NOR) (8-4-1)\" \"Kevin Kuske (GER) (4-1-0) André Lange (GER) (4-1-0)\" \"Samppa Lajunen (FIN) (3-2-0)\\n Eric Frenzel (GER) (3-1-2)\\n Felix Gottwald (AUT) (3-1-3) Johan Grøttumsbråten (\"| __truncated__ \"Anna Le Moine (SWE) (2-0-0) Cathrine Lindahl (SWE) (2-0-0) Eva Lund (SWE) (2-0-0) Anette Norberg (SWE) (2-0-0)\\\"| __truncated__ ...\n```\n:::\n\n```{.r .cell-code}\nlibrary(dplyr)\nhiver <- hiver |> \n  mutate(Editions = as.integer(Editions),\n         Epreuves_2014 = as.integer(Epreuves_2014),\n         Or = as.integer(Or),\n         Argent = as.integer(Argent),\n         Bronze = as.integer(Bronze),\n         Total = as.integer(Total))\n\nprint(hiver)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 15 × 10\n   Discipline             Annee Editions Epreuves_2014    Or Argent Bronze Total\n   <chr>                  <chr>    <int>         <int> <int>  <int>  <int> <int>\n 1 Biathlon               1924…       16            11    54     54     54   162\n 2 Bobsleigh              1924…       21             3    39     37     39   115\n 3 Combiné nordique       Depu…       22             3    28     28     28    84\n 4 Curling                1924…        4             2     7      7      7    21\n 5 Hockey sur glace       Été …       23             2    24     24     24    72\n 6 Luge                   Depu…       14             4    37     35     36   108\n 7 Patinage artistique    Été …       24             4    77     75     76   228\n 8 Patinage de vitesse    Depu…       22            12   152    155    148   455\n 9 Patinage de vitesse s… Depu…        7             8    32     32     32    96\n10 Saut à ski             Depu…       22             4    38     39     37   114\n11 Skeleton               1924…        6             2     6      6      6    18\n12 Ski acrobatique        Depu…        7            10    18     18     18    54\n13 Ski alpin              Depu…       19            10   132    135    130   397\n14 Ski de fond            Depu…       22            12   134    132    133   399\n15 Snowboard              Depu…        5            10    14     14     14    42\n# ℹ 2 more variables: Athletes_medailles <chr>, Athletes_or <chr>\n```\n:::\n\n```{.r .cell-code}\nstr(hiver)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\ntibble [15 × 10] (S3: tbl_df/tbl/data.frame)\n $ Discipline        : chr [1:15] \"Biathlon\" \"Bobsleigh\" \"Combiné nordique\" \"Curling\" ...\n $ Annee             : chr [1:15] \"1924,Depuis 1960\" \"1924-1956,depuis 1964\" \"Depuis 1924\" \"1924,depuis 1998\" ...\n $ Editions          : int [1:15] 16 21 22 4 23 14 24 22 7 22 ...\n $ Epreuves_2014     : int [1:15] 11 3 3 2 2 4 4 12 8 4 ...\n $ Or                : int [1:15] 54 39 28 7 24 37 77 152 32 38 ...\n $ Argent            : int [1:15] 54 37 28 7 24 35 75 155 32 39 ...\n $ Bronze            : int [1:15] 54 39 28 7 24 36 76 148 32 37 ...\n $ Total             : int [1:15] 162 115 84 21 72 108 228 455 96 114 ...\n $ Athletes_medailles: chr [1:15] \"Ole Einar Bjørndalen (NOR) (8-4-1)\" \"Bogdan Musiol (RDA) (1-5-1)\" \"Felix Gottwald (AUT) (3-1-3)\" \"Anna Le Moine (SWE) (2-0-0) Cathrine Lindahl (SWE) (2-0-0) Eva Lund (SWE) (2-0-0) Anette Norberg (SWE) (2-0-0)\\\"| __truncated__ ...\n $ Athletes_or       : chr [1:15] \"Ole Einar Bjørndalen (NOR) (8-4-1)\" \"Kevin Kuske (GER) (4-1-0) André Lange (GER) (4-1-0)\" \"Samppa Lajunen (FIN) (3-2-0)\\n Eric Frenzel (GER) (3-1-2)\\n Felix Gottwald (AUT) (3-1-3) Johan Grøttumsbråten (\"| __truncated__ \"Anna Le Moine (SWE) (2-0-0) Cathrine Lindahl (SWE) (2-0-0) Eva Lund (SWE) (2-0-0) Anette Norberg (SWE) (2-0-0)\\\"| __truncated__ ...\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ncalcul_medailles_individuelles_purrr <- function(data_frame) {\n    medailles_df <- data.frame(\n      Athlete = gsub(\"[file://\\\\s*\\\\(.*\\\\]\\\\s*\\\\(.*\\\\)\", \"\", data_frame$Athletes_medailles),\n      Pays = gsub(\".*\\\\((\\\\w+)\\\\)\", \"\\\\1\", data_frame$Athletes_medailles),\n      OR = as.integer(gsub(\".*\\\\((\\\\d+)-\\\\d+-\\\\d+\\\\)\", \"\\\\1\", data_frame$Athletes_medailles)),\n      ARGENT = as.integer(gsub(\".*\\\\(\\\\d+-(\\\\d+)-\\\\d+\\\\)\", \"\\\\1\", data_frame$Athletes_medailles)),\n      BRONZE = as.integer(gsub(\".*\\\\(\\\\d+-\\\\d+-(\\\\d+)\\\\)\", \"\\\\1\", data_frame$Athletes_medailles))\n    )\n   \n    medailles_df$TotalMedailles <- medailles_df$OR + medailles_df$ARGENT + medailles_df$BRONZE\n   \n    classement_df <- medailles_df[order(-medailles_df$TotalMedailles, -medailles_df$OR, -medailles_df$ARGENT, -medailles_df$BRONZE), ]\n   \n    meilleurs_athletes <- head(classement_df$Athlete, 3)\n   \n    phrase <- cat(\"Les 3 meilleurs athlètes sont :\\n\", paste(\"- \", meilleurs_athletes, collapse = \"\\n\"))\n   \n    return(phrase)\n}\ncalcul_medailles_individuelles_purrr(hiver)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nLes 3 meilleurs athlètes sont :\n -  Marit Bjørgen (NOR) (8-4-3)\n-  Ole Einar Bjørndalen (NOR) (8-4-1)\n-  Ireen Wüst (NED) (5-5-1)\n```\n:::\n\n::: {.cell-output .cell-output-stdout}\n```\nNULL\n```\n:::\n:::\n\n\nLes trois meilleurs athlètes sont donc :\n\n-   Marit Bjørgen (NOR)\n\n-   Ole Einar Bjørndalen (NOR)\n\n-   Ireen Wüst (NED)\n\n\n::: {.cell}\n\n```{.r .cell-code}\nextraire_nationalite_athlete <- function(chaine) {\n  nationalites <- regmatches(chaine, gregexpr(\"\\\\b[A-Z]{3}\\\\b\", chaine, perl=TRUE))[[1]]\n  return(nationalites)\n}\n\nnationalites_list <- map(hiver$Athletes_or, extraire_nationalite_athlete) |> \n  flatten_chr()\n\ntop3_nationalites <- nationalites_list |> \n  table() |> \n  sort(decreasing = TRUE) |> \n  head(3)\n\nprint(top3_nationalites)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nnationalites_list\nCAN NOR GER \n  8   7   6 \n```\n:::\n:::\n\n\nLes trois nations les plus représentées pour toutes les épreuves au classement du nombre de médailles d’or individuelles sont les suivantes :\n\n-   Le Canada, avec un total de 8 médailles d'or individuelles\n\n-   La Norvège, qui compte 7 médailles d'or individuelles\n\n-   L’Allemagne, avec 6 médailles d'or individuelles\n\nLa fonction purr semble offrir une syntaxe plus cohérente, plus lisible et flexible pour appliquer des opérations sur des listes. Les résultats sont différents des précédents.\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}